{
  "content": [
    {
      "language": "openapi",
      "path": "/src/resources/open_api_spec.yaml",
      "content": "openapi: 3.0.3\ninfo:\n  title: DataHub API\n  description: |-\n    The DataHub API created to serve DataHub platform which is main concept is to enable users to manage database connections, execute queries, share queries and results.   \n    This API supports multiple relational databases, such as PostgreSQL and MySQL, and facilitates tasks including:\n    \n    Key ares of this API:\n    - **Connection Management**: Create, update, delete, list and test database connections.\n    - **Query Management**: Write, save, edit, delete, and list queries with parameterization support and compatibility for various database-specific languages.\n    - **Query Execution**: Execute stored queries and display results in formats like tables and JSON.\n    \n    TODO Use Cases:\n\n  version: 1.0.0\nservers:\n  - url: 'https://localhost:8080/api/v1'\npaths:\n  /connections:\n    get:\n      operationId: getConnections\n      summary: List connections\n      description: Returns a list of available connections that is available for a user\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"./schemas/Connection.yaml\"\n    post:\n      operationId: createConnection\n      summary: Create connection\n      description: This operation will create new connection with specified details so later it can be used to run queries\n      requestBody:\n        description: Connections with details\n        content:\n          application/json:\n            schema:\n              $ref: \"./schemas/ConnectionRequest.yaml\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"./schemas/Connection.yaml\"\n    put:\n      summary: Update connection\n      description: Does not do partial update. This will replace all fields with provided ones\n      operationId: updateConnection\n      requestBody:\n        description: Connections with all details to be updated.\n        content:\n          application/json:\n            schema:\n              $ref: \"./schemas/ConnectionRequest.yaml\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"./schemas/Connection.yaml\"\n    delete:\n      summary: Delete connection\n      description: Deletes a connection with specified id\n      operationId: deleteConnection\n      responses:\n        200:\n          description: Connection successfully deleted\n  /connections/{connectionId}/test:\n    parameters:\n      - name: connectionId\n        in: path\n        description: ID of connection to be tested\n        required: true\n        schema:\n          type: integer\n          format: int64\n    post:\n      summary: Test connection\n      description: Tests the connectivity and return status\n      operationId: testConnection\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"./schemas/ConnectionTestResponse.yaml\"\n  /connections/types:\n    get:\n      summary: Connection types\n      description: Returns supported connection types like POSTGRES, MONGO etc\n      operationId: getConnectionTypes\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"./schemas/ConnectionTypeResponse.yaml\"\n  /connections/{connectionType}/parameters:\n    get:\n      summary: Connection parameters\n      description: Returns list of input fields that needs to be filled to create a connection\n      operationId: getConnectionTypeParameters\n      parameters:\n        - name: connectionType\n          in: path\n          description: Connection type\n          required: true\n          schema:\n            $ref: \"./schemas/ConnectionType.yaml\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"./schemas/InputField.yaml\""
    },
    {
      "language": "openapi",
      "path": "/src/resources/connection.yaml",
      "content": "title: Connection\nallOf:\n  - properties:\n      id:\n        type: number\n  - $ref: \"./ConnectionRequest.yaml\""
    }
  ]
}